# Feedback (다시 풀어보기)
비효율적인가....

- makeTree 함수 : 비재귀?
- distance 함수 : 캐싱?
-> 캐싱은, height를 낮게 만들수록 유리한데..
최악의 경우 n/2 이므로..


# 0001.c (solve, 6344 KB 828 MS)
태그를 봤음
최소 공통 조상? 

2 <= N <= 40,000
1 <= M <= 10,000

트리,
정점에 대한 쿼리가 들어오면 그때 그때 거리를 계산한다?
-> 깊게 생각은 안했는데 일단 안되는건 알겠음

태그명 답게 최소 공통 조상을 찾고 거기까지 거리를 더하면 됨

그럼 최소공통을 찾기 위해서는 뭘 해야할까..
최소공통 조상인치 여부를 확인해야함
그러려면 특정 노드의 Height를 알아야함.
두 정점에서 같은 height가 되는 점을 찾고 그 정점이 같은지 비교,
다르면 한개씩 올라감.
올라가면서 거리를 누적함
더함

우선 쿼리가 M개, 
한 쿼리를 처리하는데 O(N)의 시간복잡도
따라서 O(NM) => 400,000,000 4억?

의견이 갈리긴 하나, 일단 2초에 4억개 try해볼만 한듯
---
트리의 절대 경로를 효율적으로 정할 수 있나?

대충 생각했을 땐, 그냥 임의의 점으로 height 잡아도 될 것 같은데,
height가 낮을수록 좋을수도 있나?

경우의 수) a, b의 공통조상 c
Height에 대해서,
1. a, b < c
2. b < c = a

--- 
자료구조

인접리스트로 일단 저장 -> x

