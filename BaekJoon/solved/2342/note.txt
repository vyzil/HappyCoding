보드 경우의 수 총 10개,
각 보드에서 다음 보드로 업데이트 할 때, 왼쪽 or 오른쪽이 움직이므로 2개 경우의 수, 따라서 총 20번 check 필요.
INF로 초기화하고, 계산값이 작은걸로 UPDATE

# 구현
눌러야 할 번호가 생김
-> 0 - 9 기준으로


# 기록 관련
  0       1       2       3       4
-|o|-   -|-|-   -|-|-   -|-|-   -|o|-
-|o|-   o|o|-   -|o|-   o|o|-   -|-|o
-|-|-   -|-|-   -|o|-   -|-|-   -|-|-

  5       6       7       8       9
-|o|-   -|o|-   -|-|-   -|-|-   -|-|-
-|-|-   o|-|-   -|-|o   o|-|o   o|-|-
-|o|-   -|-|-   -|o|-   -|-|-   -|o|-


# 숫자가 정해지면 두가지 or 한가지 route로 귀결
0 -> 0, 1, 2, 3 / 4, 5, 6
1 -> 0, 1, 2, 3 / 4, 7, 8
2 -> 0, 1, 2, 3 / 5, 7, 9
3 -> 0, 1, 2, 3 / 6, 8, 9
4 -> 4 / 5, 6 / 7, 8
...
10 가지 Case 이므로
10 * 10 Array 만들어서 
case i -> case j 의 힘 넣으면 될듯
or 5*5 Array.. 
-> 물론 상수개라 상관은 없지만, 10개만 써도 되는데..
-> 5*5로 하면 루트의 이동이 쉬워지긴함
ex) input으로 2가 들어오면 DP[1][3]은
DP[2][3] = min(기존, DP[1][3] + power[1][3])
DP[1][2] = min(기존, DP[1][3] + power[3][2])

# 힘계산 관련
-|1|- 
2|0|4 
-|3|- 


0 -> 1, 2, 3, 4 : 2
1 -> 1    : 1
     2, 4 : 3
     3    : 4     
2 -> 2    : 1
     1, 3 : 3
     4    : 4
3 -> 3    : 1
     2, 4 : 3
     1    : 4
4 -> 4    : 1
     1, 3 : 3
     2    : 4


