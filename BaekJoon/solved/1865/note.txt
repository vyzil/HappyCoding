# Feedback
0001.c -> 벨만포드를 여러번 돌림    (1116KB, 140ms)
0002.c -> 벨만포드를 한번 돌림      (1116KB, 140ms)

0001.c는 
연결되지 않은 그래프에 대해서 벨만포드를 돌리기 위해, 벨만포드 종료시 INF인 값을 확인,
방문하지 않은 노드들을 체크하여 해당 노드를 시작으로 벨만포드를 돌림

0002.c는
dist가 INF인 지점을 체크하지 않음. 따라서 INF 더라도 업데이트가 될 수 있음
잘 생각해보면 초기에는 음수 간선들만 update를 할 것임.
그 이후에는 도로를 통해 이동가능하면 조금씩 이동하면서 확장될 것.
결국 cycle 여부를 판단하기에 적합. (cycle이 있으면 평생 udpate가 가능함)

0001.c와 0002.c의 차이점은
0001.c는 시작지점으로부터 특정 노드에 도달할 수 있는지 여부를 알 수 있음.
그러나 0002.c는 그런 것은 알 수 없고 그냥 전체 그래프에서 negcycle이 있는지만 판단 가능


# 
벨만포드,
출발위치가 update되면?

지점수 500
도로 수 2500
웜홀 수 200

S E T

최댓값 : 10,000*5000 = 50,000,000
최솟값 : 500*1000*200 = 100,000,000
int로 충분할듯

시간복잡도 : 500*5200 = 2,600,000
이걸 N 마다 해줘야한다?
2,600,000 * 500 =13,000,000,000

-- 
도로는 양방향이다.
시작위치 전부 가능 -> for문 그냥 돌리면 시간초과 날 것 같긴한데 한번 try..

INF때 update 안한다는 조건을 빼고 그냥 벨만포드 돌리면 되는거 같은데?
애초에 시작점도 지정 안해도, 될것같음

마찬가지로 초기값도 아무거나 가능
그냥 결국 마지막에 update 되느냐 마냐가 관건