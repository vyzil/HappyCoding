# Feedback

대각선, 누적 최대값
DP는 기본적으로 DP[i][j] -> i를 접고, i-j, i+1+j 까지 겹쳤을 때의 갯수
DP 2개 만들어서 
1개는 우하향 누적 배열
1개는 우상향 누적 배열

두개 동시에 할 수 있는지 모르겠음

우상향의 중간 결과값이 좌상향에 영향을 미쳐도되는건지.?

-> Query가 특정 지점까지의 우하향 또는 우상향 값중 최댓값을 요구했음


# 0002.c (solve, 196504 KB, 236 MS)
str 크기 : N

0   0 ~ 1접     0접, range 0 까지
1   1 ~ 2접     1접, range 1 까지
2   2 ~ 3접
.
N-1 N-1 ~ N 접
N 


str 크기 : 3
0   1겹
1   1겹 


str 크기 : 4
0   1겹
1   


---

i : l ~ r 까지
range는 절반까지 증가하다 감소함 > 이런 느낌으로 모음
  0 1 2 3 4 5
0 x
1 x x
2 x x x
3 x x x x 
4 x x x x x
5 x x x x
6 x x x
7 x x
N x

segTree도 필요 없네

\ 누적
/ 누적최대




# 0001.c (시간초과)

부분 string에 대해서 접을때 얻을 수 있는 최대 점수
숫자가 작아서 Brute-force 가능

대문자로만 이루어짐


l -> i

i+1 -> r

for(i) l ~ r-1
    for(j) 0 ~ MIN(i - l, r - (i + 1))
        비교 i - j, i + 1 + j 같은거 count


Hard 문제는

숫자만 달라짐

2 <= N <= 5,000
1 <= Q <= 200,000

복잡도 계산 ) 

비교 : l ~ r까지 포문, 전체 비교 -> N^2 = 25,000,000
쿼리 : Q
200,000 * 25,000,000 = 5,000,000,000,000 -> 시간초과

DP?
그냥 N^2 해서 전체 공통수를 구해놓는다?
25,000,000 계산해서 전체 문자열에 대해서 i를 접었을 때 최댓값을 알 수 있음
-> array = 5000 개
-> i에 대해서 절반정도씩 memoization 한다면 각각 2500 개 entry가 더 필요함

2500 * 5000 = 12,500,000 *4B = 50,000,000  Byte = 50MB

-> oK


MIN(i, N - (i+1)) + 1

N = 40? -> i = 20 일 때 20, 19 + 1 -> 20
N = 41? -> i = 20 20, 21, 21

Search가 
5,000 * 200,000 = 1,000,000,000 -> 애매.. 

DP[접는 위치][범위]
