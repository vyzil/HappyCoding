# Feedback
뭔가 맘에 안들어.........
일단 prev 상태 -> cur 상태로의 구문도 이상하고
그 start 가 가능한지도 스킵할 수 있으면 시간 많이 감소할 것 같음
우선 최적화가 좀 필요할거같음

만약 최초 state가 01로 가정하고 출발하는데,
마지막에 01만 체크하는게 맞나? 
그러니깐, 00 도 가능하긴 하잖아..
직관적으로는 체크 안해도 되는데, 그 이유는 모르겠음
다음과 같은 가정이 맞다면 안해도 될 것 같음
1. 00은 01보다 무조건 작다.
2. 어차피 다른 start case에서 계산된다.

# 0001.c (solve, 1116 KB 172 MS)
1 <= N <= 10000
1 <= W <= 10000

1. 한 줄, cycle 하게 연결 가능
1 2 3 4 5 6 7 8 1
2. 위 아래 연결 가능

전에 했던대로 비트필드?

한 행 기준 x
한 열 기준

prev    cur
x       x
x       x

(1, 1)  
(1, 0)
(0, 1)
(0, 0)
4개의 state
1은 사용중, 0은 사용가능

위/아래/세로 연결 가능
위 -> prev 위가 0이어야 가능
아래 -> prev 아래가 0이어야 가능
세로 -> 항상 가능

prev
0   0   1   1   
0   1   0   1   

4개 for문 으로 돌리고
if(위 가능)   위, cur update
if(아래 가능) 아래, cur update
if(세로 가능) 세로, cur update



(prev 상태 가정, -1 mod N)
0   0   1   1
0   1   0   1
네가지 중에 하나 선택, 
0
0 
시작이면 cur[0b00]만 가능
0
1
시작이면, 마지막에 cur[0b01]만 가능
1
0
시작이면, 마지막에 cur[0b01]만 가능
1
1
시작이면, 마지막에 cur[0b11]만 가능

근데, 11 가정한거면 일단 그냥 전체가 가능한데,
굳이 고려할 필요 없이 11일때가 최대로 나오나?

--- 반례
4
5 6
3 3 5 5 3
1 3 4 1 4
6 10
9 2 2 7 5 4
4 2 10 1 2 7
9 6
4 4 1 6 6 1 6 3 1
3 4 5 6 6 1 6 1 2
6 5
1 4 4 5 1 3
2 2 4 5 1 3

6
13
7
8